document
  preproc_declarations template

template
  * block

block
  ( identifier block )
  ( identifier directives block )

definition
  ( identifier )
  ( identifier directives )


bauplan := preproc_declarations template
preproc_declarations := preproc_declaration preproc_declarations
preproc_declaration := "$$" IDENTIFIER preproc_val
                     | empty
preproc_val := primitive_type
             | empty

type: complex_type | primitive_type
complex_type := template | section | variable | code | instruction
primitive_type := numeric_type | string | boolean
numeric_type := INTEGER | DOUBLE
template := "*" bodied_typedef
section := "@" bodied_typedef
code := "&" bodied_typedef
instruction := "#" bodied_typedef
variable := "$" unbodied_typedef

bodied_typedef := "(" IDENTIFIER directive_block body ")"
body := type body
       | empty
unbodied_typedef := "(" IDENTIFIER directive_block ")"
directive_block := "{" directive_list "}"
                 | empty
directive_list := IDENTIFIER directive_val directive_list_rest
                | empty
directive_list_rest := "|" directive_list
                     | empty
directive_val := ":" directive_val_list
                   | empty
directive_val_list := type directive_val_rest
directive_val_rest := "," directive_val_list
                    | empty

INTEGER := # integer
DOUBLE := # double
BOOLEAN := "true" | "false"
string := QUOTED_STRING | LITERAL | BAREWORD
QUOTED_STRING := '"' #anything '"'
LITERAL := "<<<" anything ">>>"
BAREWORD := # anything else
IDENTIFIER := /^[$A-Z_][0-9A_Z_$]*$/i
COMMENT := BLOCK_COMMENT | INLINE_COMMENT
BLOCK_COMMENT := ";;(" anything ";;)"
INLINE_COMMENT := ";;" anything
